(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))n(a);new MutationObserver(a=>{for(const s of a)if(s.type==="childList")for(const r of s.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&n(r)}).observe(document,{childList:!0,subtree:!0});function t(a){const s={};return a.integrity&&(s.integrity=a.integrity),a.referrerPolicy&&(s.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?s.credentials="include":a.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(a){if(a.ep)return;a.ep=!0;const s=t(a);fetch(a.href,s)}})();class b{constructor(){this.audio=new Audio,this.currentTrack=null,this.isPlaying=!1,this.streamCache=new Map,this.failedTracks=new Set,this.onTrackEnded=null,this.onPlayStateChange=null,this.audio.addEventListener("error",()=>{this.isPlaying=!1,this.currentTrack=null,this.onPlayStateChange&&this.onPlayStateChange(!1)}),this.audio.addEventListener("ended",()=>{this.isPlaying=!1,this.currentTrack=null,this.onPlayStateChange&&this.onPlayStateChange(!1),this.onTrackEnded&&this.onTrackEnded()}),this.audio.addEventListener("playing",()=>{this.isPlaying=!0,this.onPlayStateChange&&this.onPlayStateChange(!0)}),this.audio.addEventListener("pause",()=>{this.isPlaying=!1,this.onPlayStateChange&&this.onPlayStateChange(!1)})}async getStreamUrl(e){var n,a,s,r,o,l;const t=e.split("?")[0];if(this.failedTracks.has(t))return null;if(this.streamCache.has(t))return this.streamCache.get(t);try{const i=await fetch("https://corsproxy.io/?"+encodeURIComponent(t));if(!i.ok)throw new Error("Failed to fetch page");const u=await i.text();let d=null;const p=u.match(/data-tralbum="([^"]*)"/);if(p)try{d=(s=(a=(n=JSON.parse(decodeURIComponent(p[1].replace(/&quot;/g,'"'))).trackinfo)==null?void 0:n[0])==null?void 0:a.file)==null?void 0:s["mp3-128"]}catch(m){console.warn("Failed to parse data-tralbum:",m)}if(!d){const m=u.match(/TralbumData\s*=\s*({[\s\S]*?});/);if(m)try{d=(l=(o=(r=JSON.parse(m[1]).trackinfo)==null?void 0:r[0])==null?void 0:o.file)==null?void 0:l["mp3-128"]}catch(g){console.warn("Failed to parse TralbumData:",g)}}if(!d){const m=u.match(/"mp3-128":"([^"]*)"/);m&&(d=m[1].replace(/\\u0026/g,"&"))}return d?(this.streamCache.set(t,d),d):(this.failedTracks.add(t),null)}catch(i){return console.warn("Error extracting stream URL:",i),this.failedTracks.add(t),null}}async play(e){try{if(this.currentTrack===e&&this.isPlaying){await this.pause();return}const t=await this.getStreamUrl(e);if(!t)throw new Error("NO_STREAM");return this.audio.pause(),this.audio=new Audio,this.audio.crossOrigin="anonymous",new Promise((n,a)=>{this.audio.addEventListener("error",s=>{console.warn("Audio error:",s),a(new Error("NO_STREAM"))}),this.audio.addEventListener("loadeddata",async()=>{try{await this.audio.play(),this.currentTrack=e,this.isPlaying=!0,this.onPlayStateChange&&this.onPlayStateChange(!0),n()}catch{a(new Error("NO_STREAM"))}}),this.audio.src=t,this.audio.load()})}catch(t){throw console.warn("Play error:",t),this.isPlaying=!1,this.onPlayStateChange&&this.onPlayStateChange(!1),t}}async pause(){this.audio&&(this.audio.pause(),this.isPlaying=!1,this.onPlayStateChange&&this.onPlayStateChange(!1))}}const w={london:{lat:51.5074,lng:-.1278,name:"London"},berlin:{lat:52.52,lng:13.405,name:"Berlin"},paris:{lat:48.8566,lng:2.3522,name:"Paris"},"new york":{lat:40.7128,lng:-74.006,name:"New York"},tokyo:{lat:35.6762,lng:139.6503,name:"Tokyo"},"los angeles":{lat:34.0522,lng:-118.2437,name:"Los Angeles"},chicago:{lat:41.8781,lng:-87.6298,name:"Chicago"},detroit:{lat:42.3314,lng:-83.0458,name:"Detroit"},amsterdam:{lat:52.3676,lng:4.9041,name:"Amsterdam"},barcelona:{lat:41.3851,lng:2.1734,name:"Barcelona"},moscow:{lat:55.7558,lng:37.6173,name:"Moscow"},sydney:{lat:-33.8688,lng:151.2093,name:"Sydney"},rome:{lat:41.9028,lng:12.4964,name:"Rome"},dubai:{lat:25.276987,lng:55.296249,name:"Dubai"},mumbai:{lat:19.076,lng:72.8777,name:"Mumbai"},beijing:{lat:39.9042,lng:116.4074,name:"Beijing"},"mexico city":{lat:19.4326,lng:-99.1332,name:"Mexico City"},"cape town":{lat:-33.9249,lng:18.4241,name:"Cape Town"},"rio de janeiro":{lat:-22.9068,lng:-43.1729,name:"Rio de Janeiro"},"buenos aires":{lat:-34.6037,lng:-58.3816,name:"Buenos Aires"},istanbul:{lat:41.0082,lng:28.9784,name:"Istanbul"},bangkok:{lat:13.7563,lng:100.5018,name:"Bangkok"},toronto:{lat:43.65107,lng:-79.347015,name:"Toronto"},vancouver:{lat:49.2827,lng:-123.1207,name:"Vancouver"},"san francisco":{lat:37.7749,lng:-122.4194,name:"San Francisco"},seoul:{lat:37.5665,lng:126.978,name:"Seoul"},shanghai:{lat:31.2304,lng:121.4737,name:"Shanghai"},delhi:{lat:28.7041,lng:77.1025,name:"Delhi"},nairobi:{lat:-1.286389,lng:36.817223,name:"Nairobi"},lagos:{lat:6.5244,lng:3.3792,name:"Lagos"},lisbon:{lat:38.7223,lng:-9.1393,name:"Lisbon"},athens:{lat:37.9838,lng:23.7275,name:"Athens"},oslo:{lat:59.9139,lng:10.7522,name:"Oslo"},stockholm:{lat:59.3293,lng:18.0686,name:"Stockholm"},copenhagen:{lat:55.6761,lng:12.5683,name:"Copenhagen"},helsinki:{lat:60.1695,lng:24.9354,name:"Helsinki"},warsaw:{lat:52.2297,lng:21.0122,name:"Warsaw"},prague:{lat:50.0755,lng:14.4378,name:"Prague"},vienna:{lat:48.2082,lng:16.3738,name:"Vienna"},budapest:{lat:47.4979,lng:19.0402,name:"Budapest"},brussels:{lat:50.8503,lng:4.3517,name:"Brussels"},dublin:{lat:53.3498,lng:-6.2603,name:"Dublin"},zurich:{lat:47.3769,lng:8.5417,name:"Zurich"},geneva:{lat:46.2044,lng:6.1432,name:"Geneva"},"abu dhabi":{lat:24.4539,lng:54.3773,name:"Abu Dhabi"},doha:{lat:25.276987,lng:51.520008,name:"Doha"},manila:{lat:14.5995,lng:120.9842,name:"Manila"},jakarta:{lat:-6.2088,lng:106.8456,name:"Jakarta"},"kuala lumpur":{lat:3.139,lng:101.6869,name:"Kuala Lumpur"},hanoi:{lat:21.0285,lng:105.8542,name:"Hanoi"},"phnom penh":{lat:11.5564,lng:104.9282,name:"Phnom Penh"},santiago:{lat:-33.4489,lng:-70.6693,name:"Santiago"},bogota:{lat:4.711,lng:-74.0721,name:"Bogota"},caracas:{lat:10.4806,lng:-66.9036,name:"Caracas"},lima:{lat:-12.0464,lng:-77.0428,name:"Lima"},quito:{lat:-.1807,lng:-78.4678,name:"Quito"},montevideo:{lat:-34.9011,lng:-56.1645,name:"Montevideo"},kingston:{lat:17.9714,lng:-76.7936,name:"Kingston"},cairo:{lat:30.0444,lng:31.2357,name:"Cairo"},rabat:{lat:34.020882,lng:-6.84165,name:"Rabat"},casablanca:{lat:33.5731,lng:-7.5898,name:"Casablanca"},"addis ababa":{lat:9.030006,lng:38.740539,name:"Addis Ababa"},accra:{lat:5.6037,lng:-.187,name:"Accra"},johannesburg:{lat:-26.2041,lng:28.0473,name:"Johannesburg"},tehran:{lat:35.6892,lng:51.389,name:"Tehran"},riyadh:{lat:24.7136,lng:46.6753,name:"Riyadh"},baghdad:{lat:33.3152,lng:44.3661,name:"Baghdad"},kabul:{lat:34.5553,lng:69.2075,name:"Kabul"},karachi:{lat:24.8607,lng:67.0011,name:"Karachi"}};function S(h){h=h.toLowerCase();for(const[e,t]of Object.entries(w))if(h.includes(e))return t;return null}async function v(h){try{console.log("[Stream] Setting up stream for URL:",h);const e=await fetch("https://map.deejay.tools/stream",{method:"POST",headers:{"Content-Type":"application/json",Accept:"text/event-stream"},body:JSON.stringify({url:h})});if(console.log("[Stream] Response status:",e.status),console.log("[Stream] Response headers:",Object.fromEntries(e.headers.entries())),!e.ok)throw new Error(`Stream setup failed: ${e.status} ${e.statusText}`);if(!e.body)throw new Error("No response body received from stream");return console.log("[Stream] Stream connection established successfully"),e.body}catch(e){throw console.error("[Stream] Stream setup error:",e),new Error(`Failed to connect to stream service: ${e.message}`)}}async function C(h,e){var n;let t=null;try{e(""),console.log("[Analyzer] Initiating stream analysis for:",h),t=(await v(h)).getReader();const s=new TextDecoder;let r="";e("");let o=0;for(;;){const{value:l,done:i}=await t.read();if(i){console.log("[Analyzer] Stream complete"),e(`Analysis complete! Found ${o} results.`);break}const u=s.decode(l,{stream:!0});r+=u;const d=r.split(`

`);r=d.pop()||"";for(const p of d){if(!p.trim())continue;const m=p.split(`
`).find(c=>c.startsWith("data: "));if(!m)continue;const g=m.slice(6);if(!(g===":"||!g))try{const c=JSON.parse(g);if(!c.release||!c.collected_by){console.log("[Analyzer] Invalid data structure:",c);continue}const k=((n=c.release.location)==null?void 0:n.toLowerCase())||"",y=S(k);if(!y){console.log("[Analyzer] No mapped location found for:",k);continue}console.log("[Analyzer] Found mapped location:",y,"for:",k);const f={artist:c.release.artist,title:c.release.title,imageUrl:c.release.image_url,albumUrl:c.release.url,location:{lat:y.lat,lng:y.lng,name:y.name},genres:c.release.genres||[],firstSupporter:{name:c.collected_by.name,url:c.collected_by.bandcamp_url}};console.log("[Analyzer] Created purchase object:",{title:f.title,location:f.location,hasLocation:!!(f.location.lat&&f.location.lng)}),o++,e("newResult",{name:c.collected_by.name,url:c.collected_by.bandcamp_url,recentPurchases:[f]})}catch(c){console.error("[Analyzer] Error parsing stream data:",c),console.log("[Analyzer] Problematic data:",g)}}}}catch(a){throw console.error("[Analyzer] Stream analysis error:",a),e(`Analysis failed: ${a.message}`),a}finally{if(t)try{t.releaseLock(),console.log("[Analyzer] Stream reader released")}catch(a){console.warn("[Analyzer] Error releasing reader lock:",a)}}}class P{constructor(){this.locationGroups=new Map,this.baseSpacing=.1111}getOffset(e,t,n){const a=n*2.4,s=Math.sqrt(n)*this.baseSpacing,r=s*Math.cos(a),o=s*Math.sin(a)*Math.cos(e*Math.PI/180);return{lat:e+r,lng:t+o}}getPosition(e){const t=`${e.lat},${e.lng}`;this.locationGroups.has(t)||this.locationGroups.set(t,[]);const n=this.locationGroups.get(t),a=n.length;return n.push(!0),a===0?e:this.getOffset(e.lat,e.lng,a)}clear(){this.locationGroups.clear()}}class M{constructor(){this.map=L.map("map",{minZoom:2,maxZoom:18,maxBounds:[[-90,-180],[90,180]],maxBoundsViscosity:1}).setView([20,0],2),this.markers=[],this.markerCluster=L.markerClusterGroup({disableClusteringAtZoom:4,spiderfyOnMaxZoom:!0,showCoverageOnHover:!1,zoomToBoundsOnClick:!0}),this.player=new b,this.playHistory=[],this.genreCounts=new Map,this.activeGenres=new Set,this.locationManager=new P,L.tileLayer("https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png",{attribution:"© OpenStreetMap contributors, © CARTO",subdomains:"abcd",maxZoom:19}).addTo(this.map),this.map.addLayer(this.markerCluster),this.defaultIcon=L.divIcon({className:"custom-marker",html:'<div class="marker-dot"></div>',iconSize:[12,12]}),this.playingIcon=L.divIcon({className:"custom-marker playing",html:'<div class="marker-dot"></div>',iconSize:[12,12]}),this.visitedIcon=L.divIcon({className:"custom-marker visited",html:'<div class="marker-dot"></div>',iconSize:[12,12]}),this.player.onTrackEnded=()=>this.playNext(),this.player.onPlayStateChange=e=>this.updatePlayingState(e)}updateStatus(e){const t=document.getElementById("status");t&&(t.innerHTML=`${e}<div class="loading-dots"><span>.</span><span>.</span><span>.</span></div>`)}updateNowPlaying(e){const t=document.getElementById("nowPlaying"),n=t.querySelector("img"),a=t.querySelector(".now-playing-title"),s=t.querySelector(".now-playing-artist"),r=t.querySelector(".now-playing-buy"),o=t.querySelector(".play-button path");n.src=e.imageUrl,a.textContent=e.title,s.textContent=e.artist,r.href=e.albumUrl,o.setAttribute("d",this.player.isPlaying?"M9 8.5h2v8H9v-8zm5 0h2v8h-2v-8z":"M16.5 12.5L10.5 16.5V8.5L16.5 12.5Z"),t.classList.add("visible")}createMarker(e,t){const n=this.locationManager.getPosition(t),s=e.albumUrl===this.player.currentTrack&&this.player.isPlaying?"M9 8.5h2v8H9v-8zm5 0h2v8h-2v-8z":"M16.5 12.5L10.5 16.5V8.5L16.5 12.5Z",r=`
            <div class="marker-popup">
                <img src="${e.imageUrl}" alt="${e.title}">
                <p><strong>${e.title}</strong></p>
                <p>${e.artist}</p>
                <p class='supporterLink'>from <a href="${e.firstSupporter.url}" target="_blank">${e.firstSupporter.name}'s collection</a></p>
                <button class="play-button" onclick="app.play('${e.albumUrl}')">
                    <svg width="25" height="25" viewBox="0 0 25 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <g filter="url(#filter0_b_142_18800)">
                            <rect x="0.833984" y="0.5" width="24" height="24" rx="12" fill="#262626"/>
                            <rect x="1.00065" y="0.666667" width="23.6667" height="23.6667" rx="11.8333" stroke="#3A3A3A" stroke-width="0.333333"/>
                        </g>
                        <path d="${s}" fill="white"/>
                    </svg>
                </button>
            </div>
        `,o=L.marker([n.lat,n.lng],{icon:this.defaultIcon});return o.bindPopup(r,{closeButton:!1}),o.albumUrl=e.albumUrl,o.purchase=e,o}updateMarkerStates(){this.markers.forEach(e=>{e.albumUrl===this.player.currentTrack?e.setIcon(this.playingIcon):this.playHistory.includes(e.albumUrl)?e.setIcon(this.visitedIcon):e.setIcon(this.defaultIcon)})}updatePlayingState(e){document.querySelectorAll(".play-button").forEach(a=>{var o,l,i;const s=a.querySelector("path"),r=((l=(o=a.closest(".marker-popup"))==null?void 0:o.querySelector("img"))==null?void 0:l.src)===((i=document.querySelector(".now-playing img"))==null?void 0:i.src);e&&r?s.setAttribute("d","M9 8.5h2v8H9v-8zm5 0h2v8h-2v-8z"):s.setAttribute("d","M16.5 12.5L10.5 16.5V8.5L16.5 12.5Z")});const n=document.querySelector(".now-playing .play-button path");n&&n.setAttribute("d",e?"M9 8.5h2v8H9v-8zm5 0h2v8h-2v-8z":"M16.5 12.5L10.5 16.5V8.5L16.5 12.5Z"),this.updateMarkerStates()}async play(e){try{await this.player.play(e);const t=this.markers.find(n=>n.albumUrl===e);t&&(this.updateNowPlaying(t.purchase),this.playHistory.includes(e)||this.playHistory.push(e),this.updateMarkerStates(),t.openPopup(),this.map.panTo(t.getLatLng()))}catch(t){console.warn("Could not play track, skipping to next:",t),this.playNext()}}async analyze(){const e=document.getElementById("releaseUrl").value.trim();if(!e){this.updateStatus("Please enter a release URL");return}try{this.markerCluster.clearLayers(),this.markers=[],this.playHistory=[],this.genreCounts.clear(),this.activeGenres.clear(),this.locationManager.clear(),await C(e,(t,n)=>{n?n.recentPurchases.forEach(a=>{if(a.location&&a.genres){const s=this.createMarker(a,a.location);this.markers.push(s),this.markerCluster.addLayer(s),this.updateGenreTags(a.genres)}}):this.updateStatus(t)}),this.markers.length===0?this.updateStatus("No geotagged releases found"):this.updateStatus(`Found ${this.markers.length} geotagged releases`)}catch(t){this.updateStatus(t.message),console.error(t)}}updateGenreTags(e){if(!e||!e.length)return;e.forEach(l=>{this.genreCounts.set(l,(this.genreCounts.get(l)||0)+1)});const t=document.getElementById("genreTags");t.innerHTML="";const n=document.createElement("div");n.className="tags-container";const a=[...this.genreCounts.entries()].sort((l,i)=>i[1]-l[1]),s=16,r=[];a.forEach(([l,i])=>{const u=document.createElement("div");u.className="genre-pill",this.activeGenres.has(l)&&u.classList.add("active"),u.dataset.genre=l,u.innerHTML=`${l} <span class="genre-count">${i}</span>`,u.onclick=()=>this.toggleGenreFilter(l),r.push(u)});const o=l=>{if(n.innerHTML="",r.slice(0,l).forEach(i=>{n.appendChild(i)}),r.length>s){const i=document.createElement("div");i.className="genre-pill",i.textContent=l===s?`View All (${r.length-s} more)`:"View Less",i.onclick=()=>o(l===s?r.length:s),n.appendChild(i)}};o(s),t.appendChild(n)}toggleGenreFilter(e){this.activeGenres.has(e)?this.activeGenres.delete(e):this.activeGenres.add(e),document.querySelectorAll(".genre-pill").forEach(t=>{t.dataset.genre===e&&t.classList.toggle("active")}),this.updateMarkerVisibility()}updateMarkerVisibility(){if(this.activeGenres.size===0){this.markers.forEach(e=>{this.markerCluster.addLayer(e)});return}this.markers.forEach(e=>{(e.purchase.genres||[]).some(a=>this.activeGenres.has(a))?this.markerCluster.addLayer(e):this.markerCluster.removeLayer(e)})}async playNext(){var s;if(!this.player.currentTrack||this.markers.length===0)return;const e=this.markers.find(r=>r.albumUrl===this.player.currentTrack);if(!e)return;const t=e.getLatLng(),a=(s=this.markers.filter(r=>!this.playHistory.includes(r.albumUrl)).map(r=>({marker:r,distance:t.distanceTo(r.getLatLng())})).sort((r,o)=>r.distance-o.distance)[0])==null?void 0:s.marker;if(!a){this.updateStatus("All available tracks have been played");return}this.markers.forEach(r=>{r!==a&&r.closePopup()}),this.map.panTo(a.getLatLng()),a.openPopup(),await this.play(a.albumUrl)}async playRandom(){if(this.markers.length===0)return;const e=this.markers.filter(a=>!this.playHistory.includes(a.albumUrl));if(e.length===0){this.updateStatus("All available tracks have been played");return}const t=Math.floor(Math.random()*e.length),n=e[t];this.markers.forEach(a=>{a!==n&&a.closePopup()}),this.map.panTo(n.getLatLng()),n.openPopup(),await this.play(n.albumUrl)}}window.app=new M;
